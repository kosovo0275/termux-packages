diff -u -r ../procps-ng-3.3.9/proc/sysinfo.c ./proc/sysinfo.c
--- ../procps-ng-3.3.9/proc/sysinfo.c	2013-09-11 13:57:56.000000000 +0200
+++ ./proc/sysinfo.c	2014-07-06 08:35:27.678833325 +0200
@@ -86,19 +86,27 @@
 /***********************************************************************/
 int uptime(double *restrict uptime_secs, double *restrict idle_secs) {
     double up=0, idle=0;
+#ifndef __ANDROID__
     char *savelocale;
+#endif
 
     FILE_TO_BUF(UPTIME_FILE,uptime_fd);
+#ifndef __ANDROID__
     savelocale = strdup(setlocale(LC_NUMERIC, NULL));
     setlocale(LC_NUMERIC,"C");
+#endif
     if (sscanf(buf, "%lf %lf", &up, &idle) < 2) {
+#ifndef __ANDROID__
         setlocale(LC_NUMERIC,savelocale);
         free(savelocale);
+#endif
         fputs("bad data in " UPTIME_FILE "\n", stderr);
 	    return 0;
     }
+#ifndef __ANDROID__
     setlocale(LC_NUMERIC,savelocale);
     free(savelocale);
+#endif
     SET_IF_DESIRED(uptime_secs, up);
     SET_IF_DESIRED(idle_secs, idle);
     return up;	/* assume never be zero seconds in practice */
@@ -174,7 +182,9 @@
   double up_1, up_2, seconds;
   unsigned long long jiffies;
   unsigned h;
+#ifndef __ANDROID__
   char *savelocale;
+#endif
   long hz;
 
 #ifdef _SC_CLK_TCK
@@ -185,8 +195,10 @@
 #endif
 
   wait_j = hirq_j = sirq_j = stol_j = 0;
+#ifndef __ANDROID__
   savelocale = strdup(setlocale(LC_NUMERIC, NULL));
   setlocale(LC_NUMERIC, "C");
+#endif
   do{
     FILE_TO_BUF(UPTIME_FILE,uptime_fd);  sscanf(buf, "%lf", &up_1);
     /* uptime(&up_1, NULL); */
@@ -195,8 +207,10 @@
     FILE_TO_BUF(UPTIME_FILE,uptime_fd);  sscanf(buf, "%lf", &up_2);
     /* uptime(&up_2, NULL); */
   } while((long long)( (up_2-up_1)*1000.0/up_1 )); /* want under 0.1% error */
+#ifndef __ANDROID__
   setlocale(LC_NUMERIC, savelocale);
   free(savelocale);
+#endif
   jiffies = user_j + nice_j + sys_j + other_j + wait_j + hirq_j + sirq_j + stol_j ;
   seconds = (up_1 + up_2) / 2;
   h = (unsigned)( (double)jiffies/seconds/smp_num_cpus );
@@ -363,18 +377,26 @@
 /***********************************************************************/
 void loadavg(double *restrict av1, double *restrict av5, double *restrict av15) {
     double avg_1=0, avg_5=0, avg_15=0;
+#ifndef __ANDROID__
     char *savelocale;
+#endif
 
     FILE_TO_BUF(LOADAVG_FILE,loadavg_fd);
+#ifndef __ANDROID__
     savelocale = strdup(setlocale(LC_NUMERIC, NULL));
     setlocale(LC_NUMERIC, "C");
+#endif
     if (sscanf(buf, "%lf %lf %lf", &avg_1, &avg_5, &avg_15) < 3) {
 	fputs("bad data in " LOADAVG_FILE "\n", stderr);
+#ifndef __ANDROID__
 	free(savelocale);
+#endif
 	exit(1);
     }
+#ifndef __ANDROID__
     setlocale(LC_NUMERIC, savelocale);
     free(savelocale);
+#endif
     SET_IF_DESIRED(av1,  avg_1);
     SET_IF_DESIRED(av5,  avg_5);
     SET_IF_DESIRED(av15, avg_15);
